package department;

// Generated 2015-8-20 14:27:22 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import post.Post;

import demand.Demand;
import employee.Employee;

/**
 * Department generated by hbm2java
 */
public class Department implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -1741842547089056436L;
    private BigDecimal deptId;
    private String name;
    private Set<Post> posts = new HashSet<Post>(0);

    public Department() {
    }

    public Department(BigDecimal deptId, String name) {
	this.deptId = deptId;
	this.name = name;
    }

    public Department(BigDecimal deptId, String name, Set<Demand> demands,
	    Set<Post> posts, Set<Employee> employees) {
	this.deptId = deptId;
	this.name = name;
	this.posts = posts;
    }

    public BigDecimal getDeptId() {
	return this.deptId;
    }

    public Department setDeptId(BigDecimal deptId) {
	this.deptId = deptId;
	return this;
    }

    public String getName() {
	return this.name;
    }

    public Department setName(String name) {
	this.name = name;
	return this;
    }

    public Set<Post> getPosts() {
	return this.posts;
    }

    public Department addPost(Post post) {
	if (post == null)
	    return this;
	if (!post.getDepartment().equals(this)) {
	    post.getDepartment().getPosts().remove(post);
	}
	post.setDepartment(this);
	this.posts.add(post);
	return this;
    }

    public Department setPosts(Set<Post> posts) {
	this.posts = posts;
	return this;
    }

    @Override
    public String toString() {
	return "Department [deptId=" + deptId + ", name=" + name + ", posts="
		+ posts + "]";
    }

    @Override
    public boolean equals(Object obj) {
	if (this == obj)
	    return true;
	if (!(obj instanceof Department))
	    return false;

	final Department applicant = (Department) obj;

	if (!applicant.getName().equals(name))
	    return false;

	return true;
    }

    @Override
    public int hashCode() {
	return name.hashCode();
    }

}
